一、版本控制软件
1、为什么需要版本控制软件
1）协作开发
2）异地开发
3）版本回退
2、什么是版本控制软件
所谓的版本控制软件，主要是实现对软件源代码进行管理，主要用于解决以上三个问题。
3、解决方案
SCM（软件的配置管理，Software Configuration Management）：对源代码进行控制和管理

CVS：
VSS：
ClearCase：
SVN：主流的版本控制软件
4、什么是SVN
svn全称SubVersion
svn是近年来崛起的版本管理工具，绝大多数开源软件都使用svn作为代码版本管理软件。

5、SVN工作流程
	SVN版本控制软件是基于C/S进行架构的一款版本控制软件。
	① 进行服务端的架构（项目经理）
	架构SVN服务器
	部署相关项目
	建立与客户端的链接操作（Checkout指令）
	上传核心源代码到服务器端（Commit提交）
	更新服务器端数据到本地（Update指令）

	② 实现项目的开发（程序猿）
	建立和服务器端的链接操作（Checkout指令）
	Checkout主要功能：建立和服务端的链接与下载功能
	项目开发工作，开发完成后，上传源代码到服务器端（Commit指令）

二、SVN服务端软件的安装与配置
3、部署Shop项目
① 在svn（虚拟的服务器文件夹中创建Web文件夹作为项目目录）
② 在Web目录下创建Shop文件夹作为项目仓库
③ 使用svnadmin指令，创建SVN仓库，基本语法：
svnadmin   create    Shop项目仓库路径
创建完成后，Shop文件夹中会自动出现如下6个文件
④ 实现项目的监管
http://localhost/  自动访问到Apache的htdocs目录  htdocs （监管指令）
svn://服务器地址/  自动访问到Web服务器目录中的Shop项目 （监管指令）
基本语法：
svnserve    -d（后台运行）   -r（监管目录）   Shop仓库目录
到此项目部署完毕。
三、SVN客户端软件的安装与配置
四、模拟程序猿的工作流程
1、在客户端计算机上安装TortoiseSVN客户端软件
2、在Apache的工作目录，如htdocs文件夹中创建项目目录
3、使用SVN中的Checkout指令检出项目
输入SVN服务器端地址：
通过Checkout检出指令实现项目检出
检出成功后，如下图所示:
4、开发相关模块完毕后，通过Commit上传文件到服务器端
5、项目经理想查看程序猿进度，可以通过Update下载指令进行更新操作
更新完成后，效果如下图所示：

五、话说SVN图标集
	常规图标：当服务端代码与本地代码完全同步时，显示常规图标
	冲突图标：当我们需要提交的代码与服务端的代码有冲突时，系统会显示
	删除图标：如果服务器端的文件已删除，但本地还依然存在，系统将显示
	已添加图标：代表本文件服务器端不存在，但是已经添加到上传队列，下次提交时会自动提交此文件。
	无版本控制图标：代表当前文件是新创建的，还未提交到服务器端，系统默认显示无版本控制图标。
	修改图标：当前文件已修改，但未与服务器端数据同步，默认显示以上修改图标。
	只读图标：当服务器端文件设置为只读属性时，本地文件将显示只读图标
	锁定图标：当服务器端文件已锁定时，客户端软件将显示锁定图标。
	忽略图标：如果该文件不想上传到服务器端，可以设置为忽略，系统将自动显示忽略图标。
六、添加功能
如果一个文件已创建，但未上传（提交），可以把其添加到上传队列中，下次提交时，系统会自动提交已添加的文件。

七、忽略功能
如果有一些文件我们不想提交到服务器端，那么可以使用忽略功能忽略此文件，效果如下图所示：

忽略某个文件：如果你指向忽略某个具体的文件，可以使用此选项
忽略某类文件：如果你想忽略某些同系列的文件，可以使用此选项
八、SVN使用细节
1、SVN存储机制（差异存储机制）
2、版本回退功能
① 空白区域TortoiseSVN Update to revision
② 选择如下选项
可以根据上传的日志信息还原最初的某个版本
③ 查看系统上传日志
④ 确认还原的文件，然后选择ok即可
⑤ 把刚更新下来的内容进行修改操作，然后重新提交到服务器中，让服务器端的分支与客户端代码实时同步。
特别说明：为了将来可以更好的进行版本回退功能，所以在上传文件时，一定要填写备注信息，谨记！！！
3、版本冲突功能
如果两个人对同一个文件进行修改，会引起更新冲突，如何解决？
冲突原理图：

版本冲突的解决办法：
① 合理分配项目的开发时间
wangcai  上午开发
xiaoqiang 下午开发
② 合理分配项目的开发模块
wangcai  新闻模块
xiaoqiang 产品模块
③ 如果使用SVN，出现了版本冲突，可以采用如下方式解决
1）先更新软件版本
index.php ：整合后的冲突文件
index.php.mine ：xiaoqiang编写的index.php代码
index.php.r1 ：两者14:30同时更新的那个index.php文件
index.php.r2 ：代表服务器端最新的index.php代码
2）删除除冲突文件以外的三个文件
3）修改冲突文件（如index.php）
4）修改完成后，再次提交（Commit）冲突代码即可

4、多仓库配置
默认情况下，我们的svnserve监管指令只能监管某个固定目录，但是实际项目开发中，我们可能需要同时开发多个项目，那么这个时候如何实现多项目监管服务呢？
svnserve   -d    -r    D:\svn\Web\Shop
svnserve   -d    -r    D:\svn\Web\Wechat
默认情况下，其只能识别第一个监管服务，后面都没有任何作用，如何解决以上问题呢？
答：我们可以使用监管指令，监管上一级主目录（如Web目录）
ctrl+c ：在window下或linux下都是中止相关指令。

问题：我们的监管指令只能监管某个固定的目录，那么现在Web目录是不是一个仓库呢？
答：Web目录并不是一个仓库，因为没有通过svnadmin指令创建仓库，其只是一个普通的文件夹，由于客户端svn://服务器ip地址只能连接到相应的仓库，所以如进行访问时，必须采用如下访问方式：
访问Shopsvn://服务器的ip地址/仓库名称(Shop)
访问Wechatsvn://服务器的ip地址/仓库名称(Wechat)
对于访问形式有两种方案：
① 对于之前没有检出的目录，我们必须通过Checkout指令重新检出操作
② 对于以前已经检出过的目录，我们只需要更换访问的地址即可（ReLocate）

九、SVN权限控制
1、为什么需要权限控制
由于我们在配置文件中设置了anon-access=wirte权限，代表所有匿名用户都可以对我们的服务器进行可读可写操作，这样会导致所有连接到我们服务器的用户可以对服务器进行上传或下载服务，非常不安全，我们可以使用权限控制，限制用户的行为。

2、开启权限控制
默认情况下，SVN软件的权限控制功能是关闭的，如果想对其进行使用，必须先开启权限服务。
在conf文件夹下，找到svnserve.conf文件：
更改以下代码：
anon-access = write
#password-db = passwd
#authz-db = authz
更改为如下形式：
#anon-access = write
password-db = passwd
authz-db = authz
说明：
password-db = passwd ：开启认证文件
认证文件：主要保护了用户名和用户密码
authz-db = authz ：开启授权文件
授权文件：主要是授予某些用户某些权限（可读权限、可写权限）
3、设置认证文件与授权文件

设置认证文件：打开passwd文件（使用editplus软件即可）
	#认证文件,基本格式如下:
	#用户名 = 用户密码
	admin = admin
	susan = susan
	wilson = wilson
以上代码代表为系统添加了三个用户，分别为admin与susan,wilson

设置授权文件：打开authz文件（使用editplus软件即可）
	[groups]
	# harry_and_sally = harry,sally
	# harry_sally_and_joe = harry,sally,&joe
	#组设置,任何一个用户都属于某个组,基本语句
	#组名 = 用户(列表),多个用户之间使用逗号隔开
	admin_group = admin
	user_group = susan,wilson
以上代码代表创建了两个组，把之前创建的用户分别分配到相应的组中
	# 设置仓库的访问权限
	# [仓库名称:/]
	# @组名 = 权限 r可读 w可写 rw可读写
	# *代表匿名用户,r可读
	@admin_group = rw
	@user_group = r
	* = r
设置完成后保存即可，验证配置是否成功：

十、配置自启动服务
2、创建自启动服务
sc 	create 	服务名称   binpath=(我是空格)“D:\subversion\bin\svnserve.exe  --service   -r D:/svnroot”   start=(我是空格)auto
特别声明：以上指令只能通过超级管理员创建，普通用户没有创建权限

3、制作批处理指令
在Windows操作系统中可以通过如下指令启动、停止或删除某个服务
1）启动服务 net start svn
2）停止服务 net stop svn
3）删除服务（必须先停止后删除）sc delete svn
4）批量删除SVN标记

十一、钩子程序
1、为什么需要钩子程序

以上程序可以完成数据的同步更新，但是必须有一个管理员能实时更新数据到Apache服务器中，这样过于麻烦，在实际项目开发中，我们可以通过钩子程序来实现超级管理员的工作。
2、什么是钩子程序
所谓钩子就是与一些版本库事件（Checkout、Update、Commit）触发的程序，例如新修订版本的创建，或是未版本化属性的修改。
默认情况下，钩子的子目录(版本仓库/hooks/)，中包含各种版本库钩子模板。	

3、post-commit钩子程序
commit提交钩子：当commit事件完成后，所触发的钩子程序。
钩子程序的使用步骤：
① 在服务器端的Apache目录中创建一个目录，作为svn项目的同步目录
如在htdocs目录中创建一个叫做zhongji的目录
② 创建完成后，马上进行检出操作
③ 在客户端也创建一个目录，专门用户编辑项目（程序猿）
④ 创建完成后，也马上进行检出操作（目的：让服务器与客户端完全同步）
⑤ 在服务器端的hooks目录下创建post-commit.bat文件，并输入一下代码：

编写完成后，保存即可。
特别说明：以上程序必须由超级管理员完成，否则可能会导致无法同步，有些电脑由于优化相关服务，可能导致没有办法同步更新。
十二、扩展功能（SAE、BAE）
	1、SAE与BAE云主机（云引擎）
	我们的项目都只能部署在本地，并通过虚拟域名进行访问，这样不能达到模拟真实的开发环境，所以我们可以借助SAE或BAE来模拟真实的环境。
	2、登陆SAE服务器
	① 通过sae.sina.com.cn登陆SAE管理平台
	② 创建新应用（相当于创建一个项目）
	③ 选择空应用，创建即可
	单击应用信息进入管理界面
	选择使用的版本控制软件（SVN）
	④ 创建基本版仓库
	⑤ 使用SVN软件连接版本仓库
	我们可以通过设置的网址对其进行访问：
	⑥ 修改源代码
	使用设置的域名访问api.php文件