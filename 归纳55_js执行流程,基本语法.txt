/***key***/
Javascript是客户端浏览器、面向（基于）对象、事件驱动式的网页脚本语言

script位置个人建议：
对于函数的声明、类的定义以及外部文件的引用，建议放入head标签中
对于函数的调用、类的实例化、代码的执行，建议放入body标签中

变量必须要先声明才能使用，使用var声明变量
变量的命名规则：第一个字符必须是英文字母，下划线(_)或者是美元符号($)；其后的字符，可以是英文字母，数字，下划线或美元符号，但是变量名不能是JavaScript的保留字

if…else if…else结构可以用于整数、字符串、小数等程序的判断
switch结构只能用于整数、字符串的判断

① 在Javascript函数中，形参是没有默认值的
② 函数在定义时，其内部的代码并不会执行

在Javascript中，函数也是一种特殊的量（函数的首地址）
在Javascript中，函数在内存中的表现形式为（一段连续的内存地址），在函数的定义时，函数名称或函数本身都会返回函数在内存中的首地址

虽然arguments具有数组的相关属性（如length）也可以通过[]方括号来调用其内部的元素，但是其只是功能上类似数组，其本质还是一个对象。

在Javascript函数中，如果引用了一个变量，那么该变量会自动在当前作用域寻找var的声明语句，如未找到，则继续向上级作用域寻找var的声明语句，如还未找到，则继续向上一级作用域中寻找…直至全局作用域，如找到，则直接使用，否则会自动在全局作用域中声明该变量，我们把这种链接查询关系就称之为“作用域链”。

在PHP语言中，如果同时具有多个代码段，那么代码是一起执行的，但是在Javascript中，Script代码段是分步执行。

Script代码段的执行流程
?读入第一个代码段
?编译过程
主要流程：声明变量、声明函数、语法检查、语义检查、代码优化、分析并得到代码树
?执行过程
主要流程：变量的赋值、函数调用、代码的执行
?读入下一个代码段
?编译
?执行
?……
?结束

数组的定义
① 显示创建或直接实例化
var 数组 = new Array('数组的值','数组的值','…');
var 数组 = new Array(3);

② 隐式创建
var 数组 = ['数组的值','数组的值','…'];

文本下标型数组并不算在数组的长度中，其是以属性的形式存在于数组元素中的。


/***content***/
1、为什么需要Javascript
	验证客户端的数据
2、Javascript概述
	Javascript是由网景公司开发的基于客户端浏览器、面向对象、事件驱动式的脚本语言
	客户端语言与服务端语言
3、Javascript应用
	1）数据验证
	2）网页特效
	3）网页小游戏
	4）服务端编程（Ajax、Nodejs）
4、快速入门
	<script language='javascript' src='public.js'></script>



Javascript基本语法
变量
数据类型	
	String,Number,Boolean
	Undefined 变量有声明但未赋值
	Null 空对象类型
	Object 对象类型
运算符(单算关逻条赋逗)
算术运算符
	+ -  * / % ++ --
	++i ：先自加在运算
	i++ ：先运算后自加
比较运算符
	> < == === != !== >= <=
逻辑运算符
	&&  ||  !
赋值运算符
	=  +=  -=  *=  /=  %=
字符串运算符(连接符)
	+

流程结构
	顺序结构
	Javascript的代码是从上往下依次执行的
	选择结构
	if...else if...else
	switch() {
		case 1:

		break;
		default:
	}
	循环结构
	for
	while
	do...while...
	对于循环次数已知for，未知while

	continue 
	break 强制中止整个循环

函数
	函数的作用
		① 代码重用
		② 模块化编程
	函数的定义
		function 函数名称(参数列表) {
			//函数体
		}
	函数的调用
		函数名称（参数列表）
	形参值的改变并不会影响实参

	匿名函数i = function() {};
		调用:i();

	自调用匿名函数（框架封装）(function(){
		//函数体
	})();
	主要用于解决框架之间的命名冲突问题

	arguments类数组对象
		arguments.length
		for进行遍历
		arguments[index]

作用域链
	当我们在一个函数体内引用了一个变量，系统首先会在自身作用域中寻找该变量的声明语句var,找到直接使用，否则继续向上寻找，直到全局作用域，如果找到则直接使用，否则在全局中声明该变量。

	php函数体内的函数在内存中是相对独立
	Javascript函数体内的函数在内存中也是包含关系

script代码段
	js分段解析与执行的
	编译过程
	声明变量、声明函数、语法检查、语义检查、代码优化、分析并得到代码树
	执行过程
	变量赋值、函数的调用、代码的执行

	编译错误对当前代码段是致命的
	执行错误对当前代码端后面的代码有影响

数组:一组数据的集合
	数组定义
		var 数组 = new Array('值');
		var 数组 = [];

		length长度
	数组元素的遍历
		for
		for...in...
	数组的访问
		数组[索引]
		数组['文本'] = '值';
	多维数组的定义
		var 数组 = [[],[],[]];
